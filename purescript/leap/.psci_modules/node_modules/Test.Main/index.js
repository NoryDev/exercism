"use strict";
var Prelude = require("../Prelude");
var Test_Unit = require("../Test.Unit");
var Test_Unit_Main = require("../Test.Unit.Main");
var Test_Unit_Assert = require("../Test.Unit.Assert");
var Leap = require("../Leap");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Free = require("../Control.Monad.Free");
var Data_Function = require("../Data.Function");
var Data_Eq = require("../Data.Eq");
var Data_Show = require("../Data.Show");
var main = Test_Unit_Main.runTest(Test_Unit.suite("Leap.isLeapYear")(Control_Bind.bind(Control_Monad_Free.freeBind)(Test_Unit.test("leap year")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(true)(Leap.isLeapYear(1996))))(function () {
    return Control_Bind.bind(Control_Monad_Free.freeBind)(Test_Unit.test("non-leap year")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(false)(Leap.isLeapYear(1997))))(function () {
        return Control_Bind.bind(Control_Monad_Free.freeBind)(Test_Unit.test("non-leap even year")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(false)(Leap.isLeapYear(1998))))(function () {
            return Control_Bind.bind(Control_Monad_Free.freeBind)(Test_Unit.test("century")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(false)(Leap.isLeapYear(1900))))(function () {
                return Control_Bind.bind(Control_Monad_Free.freeBind)(Test_Unit.test("second century")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(false)(Leap.isLeapYear(1800))))(function () {
                    return Control_Bind.bind(Control_Monad_Free.freeBind)(Test_Unit.test("fourth century")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(true)(Leap.isLeapYear(2400))))(function () {
                        return Test_Unit.test("y2k")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(true)(Leap.isLeapYear(2000)));
                    });
                });
            });
        });
    });
})));
module.exports = {
    main: main
};
